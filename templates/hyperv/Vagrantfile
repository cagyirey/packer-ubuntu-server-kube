BOX_IMAGE = "ubuntu-kube"

CRI_RUNTIME = "remote"
CRI_SOCKET = "unix:///run/containerd/containerd.sock"

POD_CIDR = "172.18.0.0/16"
API_ADV_ADDRESS = "10.8.8.10"

BASE_MEM = 2048

WORKER_MEM = 4096
WORKER_CPUS = 2
WORKER_COUNT = 2

CONTROLLER_MEM = 4096
CONTROLLER_CPUS = 2

VAGRANT_KUBEDIR = "/home/vagrant/.kube"
SSH_PRIVATE_KEY_PATH = "./id_ubuntu"

Vagrant.configure("2") do |config|

    config.vm.box = BOX_IMAGE
    config.vm.guest = :debian
    config.vm.hostname = "kube-controller"
    config.vm.network :private_network, ip: API_ADV_ADDRESS

    config.vm.synced_folder ".", "/vagrant", disabled: true
    config.vm.synced_folder ".kube", VAGRANT_KUBEDIR, type: "smb" 

    config.ssh.private_key_path = SSH_PRIVATE_KEY_PATH
    
    config.vm.provider :hyperv do |hv|
        hv.vmname = "kube-controller"
        hv.cpus = CONTROLLER_CPUS
        hv.memory = BASE_MEM
        hv.maxmemory = CONTROLLER_MEM
        hv.linked_clone = true
        hv.auto_start_action = "StartIfRunning"
    end

    config.vm.provision "shell" do |s|
        s.inline = <<-SCRIPT

            openssl req -newkey rsa:4096 \
                -keyout "#{VAGRANT_KUBEDIR}/cni.key" \
                -nodes \
                -out "#{VAGRANT_KUBEDIR}/cni.csr" \
                -subj "/CN=calico-cni"

            openssl x509 -req -in "#{VAGRANT_KUBEDIR}/cni.csr" \
                -CA /etc/kubernetes/pki/ca.crt \
                -CAkey /etc/kubernetes/pki/ca.key \
                -CAcreateserial \
                -out "#{VAGRANT_KUBEDIR}/cni.crt" \
                -days 365

            kubectl config set-cluster kubernetes \
                --certificate-authority=/etc/kubernetes/pki/ca.crt \
                --embed-certs=true \
                --server="#{API_ADV_ADDRESS}" \
                --kubeconfig="#{VAGRANT_KUBEDIR}/cni.kubeconfig"
            
            kubectl config set-credentials calico-cni \
                --client-certificate="#{VAGRANT_KUBEDIR}/cni.crt" \
                --client-key="#{VAGRANT_KUBEDIR}/cni.key" \
                --embed-certs=true \
                --kubeconfig="#{VAGRANT_KUBEDIR}/cni.kubeconfig"
            
            kubectl config set-context default \
                --cluster=kubernetes \
                --user=calico-cni \
                --kubeconfig="#{VAGRANT_KUBEDIR}/cni.kubeconfig"
            
            kubectl config use-context default --kubeconfig="#{VAGRANT_KUBEDIR}/cni.kubeconfig"

            cp "#{VAGRANT_KUBEDIR}/cni.kubeconfig" /etc/cni/net.d/calico-kubeconfig
            chmod 600 /etc/cni/net.d/calico-kubeconfig
            
            mkdir -p /etc/containerd
            containerd config default | tee /etc/containerd/config.toml

            snap set kubelet \
                container-runtime="#{CRI_RUNTIME}" \
                container-runtime-endpoint="#{CRI_SOCKET}"

            kubeadm init \
                --pod-network-cidr #{POD_CIDR} \
                --apiserver-advertise-address #{API_ADV_ADDRESS}
            
            cp -i /etc/kubernetes/admin.conf #{VAGRANT_KUBEDIR}/config
            chown vagrant:vagrant #{VAGRANT_KUBEDIR}/config

            mkdir -p /root/.kube
            cp -i /etc/kubernetes/admin.conf /root/.kube/config
        SCRIPT
    end

    (0..WORKER_COUNT-1).each do |i|
        config.vm.define "kube-worker-#{i}" do |subconfig|
            subconfig.vm.box = BOX_IMAGE
            subconfig.vm.guest = :debian
            subconfig.vm.hostname = "kube-worker-#{i}"
            subconfig.vm.network :private_network, ip: "10.8.8.#{i + 20}"
        
            subconfig.ssh.private_key_path = SSH_PRIVATE_KEY_PATH

            subconfig.vm.provider :hyperv do |hv|
                hv.vmname = "kube-worker-#{i}"
                hv.cpus = WORKER_CPUS
                hv.memory = BASE_MEM
                hv.maxmemory = WORKER_MEM
                hv.linked_clone = true
                hv.auto_start_action = "StartIfRunning"
            end
        
            subconfig.vm.provision "shell" do |s|
                s.inline = <<-SCRIPT
                    echo KUBELET_EXTRA_ARGS=--node-ip=10.8.8.#{i + 20} > /etc/default/kubelet
                SCRIPT
            end
        end
    end
end