#cloud-config
autoinstall:
  version: 1

  refresh-installer:
    update: yes

  apt:
    sources:
      # required for kubernetes-cni
      kubernetes-ppa:
        source: ppa:k8s-maintainers/1.21

  packages:
    # kernel
    - linux-azure
    # hyper-v dependencies
    - linux-tools-azure
    - linux-cloud-tools-azure
    # containerd dependencies
    - containerd
    - kubernetes-cni
    # kubeadm dependencies
    - conntrack
    - socat

  snaps:
    - name: kubelet
      channel: "latest/stable"
      classic: true
    - name: kubectl
      channel: "latest/stable"
      classic: true
    - name: kubeadm
      channel: "latest/stable"
      classic: true

  storage:
    layout:
      name: lvm

  early-commands:
    - systemctl stop ssh # otherwise packer tries to connect and exceed max attempts

  keyboard:
    layout: en

  ssh:
    install-server: yes
    allow-pw: no

  late-commands:
    - lvextend -r -l +100%FREE $(lvs --no-heading -o vg_name,lv_name --separator /)
    - swapoff -a
    - rm /target/swap.img

    # Install crictl
    - wget -qO - https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz | tar zxvf - -C /target/usr/local/bin
    
    # remove generic kernel
    - apt purge linux-generic

  user-data:
    users:
      - name: vagrant
        groups: users
        passwd: "$6$bhZARn1NjBXaQ.M.$JqHfRKB96fwRQQWNGH.tBxyECYY9rrbBeS8br84ccn4OSnC.7pyhvHunpobZ8fV8NCOIXasRGyZT4MCJWQYtM1"
        sudo: ALL=(ALL) NOPASSWD:ALL
        lock_passwd: false
        shell: /bin/bash
        ssh_authorized_keys:
          - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICuj30xqI85pnAEsZaq6nHHTnFGFHwnWVSIYT6NdE75S"

    write_files:
      - path: /etc/sysctl.d/99-kubernetes-cri.conf
        content: |
          # added for kubernetes bridge
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-iptables  = 1

      - path: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

      - path: /etc/cni/net.d/99-loopback.conf
        content: |
          {
            "cniVersion": "0.3.1",
            "name": "lo",
            "type": "loopback"
          }

      - path: /etc/containerd/containerd.toml
        content: |
          version = 2
          root = "/var/lib/containerd"
          state = "/run/containerd"
          plugin_dir = ""
          disabled_plugins = []
          required_plugins = []
          oom_score = 0

          [grpc]
            address = "/run/containerd/containerd.sock"
            tcp_address = ""
            tcp_tls_cert = ""
            tcp_tls_key = ""
            uid = 0
            gid = 0
            max_recv_message_size = 16777216
            max_send_message_size = 16777216

          [ttrpc]
            address = ""
            uid = 0
            gid = 0

          [debug]
            address = ""
            uid = 0
            gid = 0
            level = ""

          [metrics]
            address = ""
            grpc_histogram = false

          [cgroup]
            path = ""

          [timeouts]
            "io.containerd.timeout.shim.cleanup" = "5s"
            "io.containerd.timeout.shim.load" = "5s"
            "io.containerd.timeout.shim.shutdown" = "3s"
            "io.containerd.timeout.task.state" = "2s"

          [plugins]
            [plugins."io.containerd.gc.v1.scheduler"]
              pause_threshold = 0.02
              deletion_threshold = 0
              mutation_threshold = 100
              schedule_delay = "0s"
              startup_delay = "100ms"
            [plugins."io.containerd.grpc.v1.cri"]
              disable_tcp_service = true
              stream_server_address = "127.0.0.1"
              stream_server_port = "0"
              stream_idle_timeout = "4h0m0s"
              enable_selinux = false
              sandbox_image = "k8s.gcr.io/pause:3.1"
              stats_collect_period = 10
              systemd_cgroup = false
              enable_tls_streaming = false
              max_container_log_line_size = 16384
              disable_cgroup = false
              disable_apparmor = false
              restrict_oom_score_adj = false
              max_concurrent_downloads = 3
              disable_proc_mount = false
              [plugins."io.containerd.grpc.v1.cri".containerd]
                snapshotter = "overlayfs"
                default_runtime_name = "runc"
                no_pivot = false
                [plugins."io.containerd.grpc.v1.cri".containerd.default_runtime]
                  runtime_type = ""
                  runtime_engine = ""
                  runtime_root = ""
                  privileged_without_host_devices = false
                [plugins."io.containerd.grpc.v1.cri".containerd.untrusted_workload_runtime]
                  runtime_type = ""
                  runtime_engine = ""
                  runtime_root = ""
                  privileged_without_host_devices = false
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
                  [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                    runtime_type = "io.containerd.runc.v1"
                    runtime_engine = ""
                    runtime_root = ""
                    privileged_without_host_devices = false
              [plugins."io.containerd.grpc.v1.cri".cni]
                bin_dir = "/opt/cni/bin"
                conf_dir = "/etc/cni/net.d"
                max_conf_num = 1
                conf_template = ""
              [plugins."io.containerd.grpc.v1.cri".registry]
                [plugins."io.containerd.grpc.v1.cri".registry.mirrors]
                  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
                    endpoint = ["https://registry-1.docker.io"]
              [plugins."io.containerd.grpc.v1.cri".x509_key_pair_streaming]
                tls_cert_file = ""
                tls_key_file = ""
            [plugins."io.containerd.internal.v1.opt"]
              path = "/opt/containerd"
            [plugins."io.containerd.internal.v1.restart"]
              interval = "10s"
            [plugins."io.containerd.metadata.v1.bolt"]
              content_sharing_policy = "shared"
            [plugins."io.containerd.monitor.v1.cgroups"]
              no_prometheus = false
            [plugins."io.containerd.runtime.v1.linux"]
              shim = "containerd-shim"
              runtime = "runc"
              runtime_root = ""
              no_shim = false
              shim_debug = false
            [plugins."io.containerd.runtime.v2.task"]
              platforms = ["linux/amd64"]
            [plugins."io.containerd.service.v1.diff-service"]
              default = ["walking"]
            [plugins."io.containerd.snapshotter.v1.devmapper"]
              root_path = ""
              pool_name = ""
              base_image_size = ""